* PWLConf 2017

** Live Caption Stream

https://www.streamtext.net/player?event=PWL

** Interesting Links

These wer links that were shared

[[https://magenta.tensorflow.org/welcome-to-magenta][Magenta from Google Brain Team]]: "Can we use machine learning to create compelling art and music? If so, how? If not, why not?"

** Policy

- No questions after talk, ask later

** Delimited Continuations for Everyone

Presenter: Kenichi Asai
https://pwlconf.org/2017/kenichi-asai/
Examples were in Haskell (I think)

*** Continuations
- Identifying continuations and the types


*** Delimited Continuations
https://en.wikipedia.org/wiki/Delimited_continuation
- Computation delimited upto the computation
- Example: exiting with shift
--> multiplying numbers but discarding the continuation if one of them is 0
--> using shift as an exception handling
--> because the contination is returned, we can play with it
- captured continuation is returned immediately
- Example: reordering with take
--> if not found, return (NotFound, [])
--> else, return loop rest (n - 1) in (found, first:: t)
---> basically cons the remaining elements after adding the found
- Example: normalization for arithmetic expressions
--> Used in P. Thielman's Cogen in Six Lines paper ICFP 1996 (http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.51.7918&rep=rep1&type=pdf)

*** Wrapping continuations
- Steps: Abort, Access, Resume

- Example: concat strings
--> reset returns the new function with the new string concatenated

*** State Monad

*** Curry-Howard Isomorphism
https://en.wikibooks.org/wiki/Haskell/The_Curry%E2%80%93Howard_isomorphism
-Curry-Howard isomorphism says that if the typability  of programs in functional  language corresponds
one to one to the derivability of form to function in probabilistic logic, and if   you write the system
and the   intuition system then and   compare them, then you see that those two are exactly  the same.
- Current proof assistants do not allow exceptions
- what is type of shift?

*** Summary

- shift and reset are simple but quite expressive
- relationship to logic aren't well known
- high order functions are useful even though you can write program without them (I'm guessing this is the equivalence from Curry-Howard Isomorphism)

*** Feedback
- hard to read the slides with the lighting, I asked on the slack channel
- code seemed pretty straightforward and possibly useful for other languages too, need time to digest


** Decoding the Sensuality in Music

Presenter: Elaine Chew
https://pwlconf.org/2017/elaine-chew/

*** ava
https://luweiyang.com/research/ava-project/
- Software created in Elaine's lab that finds fundamental frequency in a sound and it can automatically extract the moments when
there's vibrato, using an FDM technique, filter diagonalization method.
- can be used for synthesis too

*** Vibrato
- Example from Western and Chinese music

*** Changes
- The changes in tonality, major minor chords and transitions make it interesting too
- Unexpected changes - goosebumps or pleasurable experience
- Surprising moments, having humorous moments in the music


*** Musa-RT
https://itunes.apple.com/us/app/musa-rt/id506866959?mt=12&ign-mpt=uo%3D4

*** Sweet Anticipation
Psychology of expectation
https://mitpress.mit.edu/books/sweet-anticipation

*** Harmonic Experience by WA Matthieu
https://www.amazon.com/Harmonic-Experience-Harmony-Natural-Expression/dp/0892815604

*** Music generated by computers
- Using tension model to constrain the movement within space

* What happened to distributed programming languages?

** Languages
- Linda
- Erlang
- Lasp
- Mirage

** Argus
- Author: Barbara Liskov
- 1988

- A lot of fundamental programming ideas trace back to this paper
- Introduced Guardians - like an abstract object
  - encapsulated variables in Guardian
- Everything is read-write locks
- Uses 2-phase commits to make hierarchies
- Way to recover/rollback
- Coupled with the kernel

** Emerald
- 1987

- Abstract Types: better error notifications
- Compiler baked into the kernel

** Erlang
- 1990

** Linda
- 1994

- Tuple-spaces introduced as an alternative to message passing
- Insert in serial or in parallel
- C-Linda, Fortran-Linda

** Cloud Haskell
- 2013

** Bloom
- 2011

- From Systems group from Berkeley
- Issues around coordination and data consistency
- Channels

** Lasp
- 2015

** Summary
- Lot of these are libraries in existing languages
